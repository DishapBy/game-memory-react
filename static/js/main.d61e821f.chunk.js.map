{"version":3,"sources":["Components/Item/Item.js","Components/allItems/AllItems.js","App.js","index.js"],"names":["Item","props","console","log","id","propsColor","found","active","funcHandler","event","myFunc","changeActiveClass","className","onClick","letter","AllItems","useState","arr","setArr","clickCount","setClickCount","clickLetter","setClickLetter","useEffect","tmpArrResult","dataItems","map","item","Math","floor","random","sort","item1","item2","tmpArr","target","innerText","result","index","key","defaultValue","App","ReactDOM","render","document","getElementById"],"mappings":"wwCA2BeA,MAxBf,SAAcC,GACVC,QAAQC,IAAIF,EAAMG,IAClB,IAAIC,EAAa,aACE,IAAhBJ,EAAMK,QACLD,EAAa,YAGjBA,GAAU,WAAQJ,EAAMM,QAExB,IAKMC,EAA+B,aAAjBP,EAAMM,OAAwB,KALhC,SAACE,GACfR,EAAMS,OAAOD,GACbR,EAAMU,kBAAkBV,EAAMG,KAMlC,OACI,qBAAKQ,UAAWP,EAAYQ,QAASL,EAArC,SACI,6BAAKP,EAAMa,YC4DRC,MA5Ef,WAAqB,IAAD,EAEMC,mBAAS,IAFf,mBAETC,EAFS,KAEJC,EAFI,OAGoBF,mBAAS,GAH7B,mBAGTG,EAHS,KAGGC,EAHH,OAIsBJ,mBAAS,IAJ/B,mBAITK,EAJS,KAIIC,EAJJ,KAMhBC,qBAAU,WAEN,IAAIC,EAAeC,EAAUC,KAAI,SAAAC,GAE7B,OADAA,EAAKvB,GAAKwB,KAAKC,MAAM,EAAI,IAAAD,KAAKE,UACvBH,KAGXH,EAAaO,MAAK,SAACC,EAAOC,GACtB,OAAOD,EAAM5B,GAAK6B,EAAM7B,MAG5Bc,GAAO,kBAAMM,OAEd,IAEH,IAAMb,EAAoB,SAACP,GACvB,IAAI8B,EAAS,YAAIjB,GAAKS,KAAI,SAAAC,GACtB,OAAIA,EAAKvB,KAAOA,EACL,2BAAIuB,GAAX,IAAiBpB,OAAQ,aAEtBoB,KAEXT,EAAOgB,IAGLxB,EAAS,SAACD,GACZW,EAAcD,EAAa,GAC3BjB,QAAQC,IAAIM,EAAM0B,OAAO/B,IACzBkB,GAAe,WACP,MAAM,GAAN,mBAAWD,GAAX,CAAwBZ,EAAM0B,OAAOC,gBAK7CC,EAASpB,EAAIS,KAAI,SAACC,EAAMW,GAAP,OAAiB,wBAAC,EAAD,2BAAUX,GAAV,IAAgBjB,OAAQA,EAAQC,kBAAmBA,EAAmB4B,IAAKD,QAE7GE,EAAe,WACfpB,EAAc,GACdE,EAAe,KAGnB,GAAkB,IAAfH,GAAoBE,EAAY,KAAOA,EAAY,GAAG,CACrD,IAAIa,EAAM,YAAOjB,GACjBiB,EAASjB,EAAIS,KAAI,SAAAC,GACb,OAAGA,EAAKb,SAAWO,EAAY,GACpB,2BAAIM,GAAX,IAAiBrB,OAAO,IAErBqB,KAGXT,EAAOgB,GACPM,IAGJ,GAAkB,IAAfrB,EAAkB,CACjB,IAAIe,EAASjB,EAAIS,KAAI,SAAAC,GACjB,OAAO,2BAAIA,GAAX,IAAiBpB,OAAQ,mBAE7BW,EAAOgB,GACPM,IAGJ,OACI,qBAAK5B,UAAW,WAAhB,SACKyB,KC/DEI,MATf,WAEI,OACI,8BACI,cAAC,EAAD,OCHZC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.d61e821f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Item(props) {\r\n    console.log(props.id)\r\n    let propsColor = 'Item blue';\r\n    if(props.found === true){\r\n        propsColor = 'Item red';\r\n    }\r\n\r\n    propsColor += ` ${props.active}`;\r\n\r\n    const allMyFunc = (event) => {\r\n        props.myFunc(event);\r\n        props.changeActiveClass(props.id)\r\n    }\r\n\r\n    const funcHandler = props.active === \"selected\" ? null : allMyFunc\r\n\r\n\r\n    return(\r\n        <div className={propsColor} onClick={funcHandler}>\r\n            <h2>{props.letter}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;","import React, {useEffect, useState} from 'react';\r\nimport './style.css';\r\nimport dataItems from '../../data/dataFiles.json';\r\nimport Item from \"../Item/Item\";\r\n\r\n\r\nfunction AllItems() {\r\n\r\n    const [arr, setArr] = useState([]);\r\n    const [clickCount, setClickCount] = useState(0);\r\n    const [clickLetter, setClickLetter] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        let tmpArrResult = dataItems.map(item => {\r\n            item.id = Math.floor(1 + Math.random() * (100000 + 1 - 1));\r\n            return item\r\n        })\r\n\r\n        tmpArrResult.sort((item1, item2) =>{\r\n            return item1.id - item2.id;\r\n        })\r\n\r\n        setArr(() => tmpArrResult);\r\n\r\n    }, [])\r\n\r\n    const changeActiveClass = (id) => {\r\n        let tmpArr = [...arr].map(item => {\r\n            if (item.id === id) {\r\n                return {...item, active: \"selected\"}\r\n            }\r\n            return item;\r\n        })\r\n        setArr(tmpArr);\r\n    }\r\n\r\n    const myFunc = (event) => {\r\n        setClickCount(clickCount + 1);\r\n        console.log(event.target.id)\r\n        setClickLetter(() =>{\r\n                return [...clickLetter, event.target.innerText];\r\n            }\r\n        )\r\n    }\r\n\r\n    let result = arr.map((item, index) => <Item {...item} myFunc={myFunc} changeActiveClass={changeActiveClass} key={index}/>)\r\n\r\n    let defaultValue = () => {\r\n        setClickCount(0);\r\n        setClickLetter([]);\r\n    }\r\n\r\n    if(clickCount === 2 && clickLetter[0] === clickLetter[1]){\r\n        let tmpArr = [...arr];\r\n        tmpArr = arr.map(item => {\r\n            if(item.letter === clickLetter[0]){\r\n                return {...item, found: true}\r\n            }\r\n            return item;\r\n        })\r\n\r\n        setArr(tmpArr)\r\n        defaultValue();\r\n    }\r\n\r\n    if(clickCount === 3) {\r\n        let tmpArr = arr.map(item => {\r\n            return {...item, active: \"notSelected\"};\r\n        });\r\n        setArr(tmpArr)\r\n        defaultValue();\r\n    }\r\n\r\n    return (\r\n        <div className={'AllItems'}>\r\n            {result}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AllItems;\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport AllItems from \"./Components/allItems/AllItems\";\n\nfunction App() {\n\n    return(\n        <div>\n            <AllItems />\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\n    <App />\n,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}