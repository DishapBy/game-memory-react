{"version":3,"sources":["Components/Item/Item.js","Components/allItems/AllItems.js","App.js","index.js"],"names":["Item","props","propsColor","found","active","funcHandler","event","myFunc","changeActiveClass","id","className","onClick","letter","AllItems","useState","arr","setArr","clickCount","setClickCount","clickLetter","setClickLetter","useEffect","tmpArrResult","dataItems","map","item","Math","floor","random","sort","item1","item2","tmpArr","console","log","target","Date","innerText","result","index","key","defaultValue","App","ReactDOM","render","document","getElementById"],"mappings":"wwCA2BeA,MAxBf,SAAcC,GAEV,IAAIC,EAAa,aACE,IAAhBD,EAAME,QACLD,EAAa,YAGjBA,GAAU,WAAQD,EAAMG,QAExB,IAKMC,EAA+B,aAAjBJ,EAAMG,OAAwB,KALhC,SAACE,GACfL,EAAMM,OAAOD,GACbL,EAAMO,kBAAkBP,EAAMQ,KAMlC,OACI,qBAAKC,UAAWR,EAAYS,QAASN,EAArC,SACI,6BAAKJ,EAAMW,YC6DRC,MA7Ef,WAAqB,IAAD,EAEMC,mBAAS,IAFf,mBAETC,EAFS,KAEJC,EAFI,OAGoBF,mBAAS,GAH7B,mBAGTG,EAHS,KAGGC,EAHH,OAIsBJ,mBAAS,IAJ/B,mBAITK,EAJS,KAIIC,EAJJ,KAMhBC,qBAAU,WAEN,IAAIC,EAAeC,EAAUC,KAAI,SAAAC,GAE7B,OADAA,EAAKhB,GAAKiB,KAAKC,MAAM,EAAI,IAAAD,KAAKE,UACvBH,KAGXH,EAAaO,MAAK,SAACC,EAAOC,GACtB,OAAOD,EAAMrB,GAAKsB,EAAMtB,MAG5BO,GAAO,kBAAMM,OAEd,IAEH,IAAMd,EAAoB,SAACC,GACvB,IAAIuB,EAAS,YAAIjB,GAAKS,KAAI,SAAAC,GAClB,OAAIA,EAAKhB,KAAOA,EACL,2BAAIgB,GAAX,IAAiBrB,OAAQ,aAEtBqB,KAEXT,EAAOgB,IAGTzB,EAAS,SAACD,GACZY,EAAcD,EAAa,GAC3BgB,QAAQC,IAAI5B,EAAM6B,QAClBf,GAAe,WAEX,OADAa,QAAQC,IAAI,IAAIE,MACV,GAAN,mBAAWjB,GAAX,CAAwBb,EAAM6B,OAAOE,gBAKzCC,EAASvB,EAAIS,KAAI,SAACC,EAAMc,GAAP,OAAiB,wBAAC,EAAD,2BAAUd,GAAV,IAAgBlB,OAAQA,EAAQC,kBAAmBA,EAAmBgC,IAAKD,QAE7GE,EAAe,WACfvB,EAAc,GACdE,EAAe,KAGnB,GAAkB,IAAfH,GAAoBE,EAAY,KAAOA,EAAY,GAAG,CACrD,IAAIa,EAAM,YAAOjB,GACbiB,EAASjB,EAAIS,KAAI,SAAAC,GACb,OAAGA,EAAKb,SAAWO,EAAY,GACrB,2BAAIM,GAAX,IAAiBtB,OAAO,IAEpBsB,KAGfT,EAAOgB,GACPS,IAGJ,GAAkB,IAAfxB,EAAkB,CACjB,IAAIe,EAASjB,EAAIS,KAAI,SAAAC,GACjB,OAAO,2BAAIA,GAAX,IAAiBrB,OAAQ,mBAE7BY,EAAOgB,GACPS,IAGJ,OACI,qBAAK/B,UAAW,WAAhB,SACK4B,KChEEI,MATf,WAEI,OACI,8BACI,cAAC,EAAD,OCHZC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.5596aba0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Item(props) {\r\n\r\n    let propsColor = 'Item blue';\r\n    if(props.found === true){\r\n        propsColor = 'Item red';\r\n    }\r\n\r\n    propsColor += ` ${props.active}`;\r\n\r\n    const allMyFunc = (event) => {\r\n        props.myFunc(event);\r\n        props.changeActiveClass(props.id)\r\n    }\r\n\r\n    const funcHandler = props.active === \"selected\" ? null : allMyFunc\r\n\r\n\r\n    return(\r\n        <div className={propsColor} onClick={funcHandler}>\r\n            <h2>{props.letter}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;","import React, {useEffect, useState} from 'react';\r\nimport './style.css';\r\nimport dataItems from '../../data/dataFiles.json';\r\nimport Item from \"../Item/Item\";\r\n\r\n\r\nfunction AllItems() {\r\n\r\n    const [arr, setArr] = useState([]);\r\n    const [clickCount, setClickCount] = useState(0);\r\n    const [clickLetter, setClickLetter] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        let tmpArrResult = dataItems.map(item => {\r\n            item.id = Math.floor(1 + Math.random() * (1000 + 1 - 1));\r\n            return item\r\n        })\r\n\r\n        tmpArrResult.sort((item1, item2) =>{\r\n            return item1.id - item2.id;\r\n        })\r\n\r\n        setArr(() => tmpArrResult);\r\n\r\n    }, [])\r\n\r\n    const changeActiveClass = (id) => {\r\n        let tmpArr = [...arr].map(item => {\r\n                if (item.id === id) {\r\n                    return {...item, active: \"selected\"}\r\n                }\r\n                return item;\r\n            })\r\n            setArr(tmpArr);\r\n    }\r\n\r\n    const myFunc = (event) => {\r\n        setClickCount(clickCount + 1);\r\n        console.log(event.target)\r\n        setClickLetter(() =>{\r\n            console.log(new Date())\r\n            return [...clickLetter, event.target.innerText];\r\n            }\r\n        )\r\n    }\r\n\r\n    let result = arr.map((item, index) => <Item {...item} myFunc={myFunc} changeActiveClass={changeActiveClass} key={index}/>)\r\n\r\n    let defaultValue = () => {\r\n        setClickCount(0);\r\n        setClickLetter([]);\r\n    }\r\n\r\n    if(clickCount === 2 && clickLetter[0] === clickLetter[1]){\r\n        let tmpArr = [...arr];\r\n            tmpArr = arr.map(item => {\r\n                if(item.letter === clickLetter[0]){\r\n                   return {...item, found: true}\r\n                }\r\n                return item;\r\n            })\r\n\r\n        setArr(tmpArr)\r\n        defaultValue();\r\n    }\r\n\r\n    if(clickCount === 3) {\r\n        let tmpArr = arr.map(item => {\r\n            return {...item, active: \"notSelected\"};\r\n        });\r\n        setArr(tmpArr)\r\n        defaultValue();\r\n    }\r\n\r\n    return (\r\n        <div className={'AllItems'}>\r\n            {result}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AllItems;","import React, {useState} from 'react';\nimport './App.css';\nimport AllItems from \"./Components/allItems/AllItems\";\n\nfunction App() {\n\n    return(\n        <div>\n            <AllItems />\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\n    <App />\n,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}